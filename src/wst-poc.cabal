cabal-version:      3.4
name:               wst-poc
version:            0.3.0.0
synopsis:           On-chain code for regulated stablecoin proof-of-concept
license:            Apache-2.0
license-files:      LICENSE
maintainer:         j-mueller@users.noreply.github.com
author:             Djed team @ IOG
homepage:           https://github.com/input-output-hk/wst-poc
bug-reports:        https://github.com/input-output-hk/wst-poc
description:
  Please see the README on GitHub at <https://github.com/input-output-hk/wst-poc>

-- A copyright notice.
-- copyright:
-- category:
extra-source-files: CHANGELOG.md

common lang
  ghc-options:
    -Werror -Wall -Weverything -Wcompat -Wincomplete-uni-patterns
    -Wno-unused-do-bind -Wno-partial-type-signatures
    -Wmissing-export-lists -Wincomplete-record-updates
    -Wno-missing-import-lists -Wunused-imports
    -Wmissing-deriving-strategies -Wno-name-shadowing -Wunused-foralls
    -fprint-explicit-foralls -fprint-explicit-kinds -Wunused-do-bind
    -Wno-unused-do-bind -Wno-missing-kind-signatures
    -Wno-implicit-prelude -Wno-unsafe -Wno-missing-safe-haskell-mode
    -Wno-missing-local-signatures -Wno-prepositive-qualified-module
    -Wno-missing-import-lists -Wno-monomorphism-restriction
    -Wno-missed-specialisations -Wno-all-missed-specializations
    -Wno-unrecognised-warning-flags -Wno-unrecognised-pragmas
    -Wno-operator-whitespace -fprint-equality-relations
    -fprint-explicit-kinds -fprint-explicit-foralls
    -Wno-unused-packages

  default-extensions:
    BangPatterns
    BinaryLiterals
    ConstrainedClassMethods
    ConstraintKinds
    DataKinds
    DeriveAnyClass
    DeriveDataTypeable
    DeriveFoldable
    DeriveFunctor
    DeriveGeneric
    DeriveLift
    DeriveTraversable
    DerivingStrategies
    DerivingVia
    DoAndIfThenElse
    DuplicateRecordFields
    EmptyCase
    EmptyDataDecls
    EmptyDataDeriving
    ExistentialQuantification
    ExplicitForAll
    FlexibleContexts
    FlexibleInstances
    ForeignFunctionInterface
    GADTSyntax
    GeneralisedNewtypeDeriving
    GeneralizedNewtypeDeriving
    HexFloatLiterals
    ImplicitPrelude
    ImportQualifiedPost
    InstanceSigs
    KindSignatures
    LambdaCase
    MonomorphismRestriction
    MultiParamTypeClasses
    NamedFieldPuns
    NamedWildCards
    NoMonomorphismRestriction
    NoStarIsType
    NumericUnderscores
    OverloadedLabels
    OverloadedRecordDot
    OverloadedStrings
    PackageImports
    PartialTypeSignatures
    PatternGuards
    PolyKinds
    PostfixOperators
    QualifiedDo
    RankNTypes
    RecordWildCards
    RelaxedPolyRec
    ScopedTypeVariables
    StandaloneDeriving
    StandaloneKindSignatures
    TupleSections
    TypeApplications
    TypeFamilies
    TypeFamilyDependencies
    TypeOperators
    TypeSynonymInstances
    UndecidableInstances
    ViewPatterns

library
  import:             lang
  ghc-options:
    -Wall -Wcompat -Wincomplete-uni-patterns -Wno-unused-do-bind
    -Wno-partial-type-signatures -Wno-missing-import-lists
    -Wmissing-export-lists -Wincomplete-record-updates
    -Wmissing-deriving-strategies -Wno-name-shadowing -Wunused-foralls
    -Wno-unused-packages -Wno-missing-local-signatures
    -Wno-implicit-prelude -fprint-explicit-foralls
    -fprint-explicit-kinds -Wunused-imports
    -Wno-missing-safe-haskell-mode -Wno-missing-kind-signatures
    -Wno-operator-whitespace -Wno-unsafe
    -Wno-prepositive-qualified-module -Wno-partial-fields
    -Wno-monomorphism-restriction -Wno-missed-specialisations
    -Wno-all-missed-specializations -Wno-unused-packages

  default-extensions:
    BangPatterns
    BinaryLiterals
    ConstrainedClassMethods
    ConstraintKinds
    DataKinds
    DeriveAnyClass
    DeriveDataTypeable
    DeriveFoldable
    DeriveFunctor
    DeriveGeneric
    DeriveLift
    DeriveTraversable
    DerivingStrategies
    DerivingVia
    DoAndIfThenElse
    DuplicateRecordFields
    EmptyCase
    EmptyDataDecls
    EmptyDataDeriving
    ExistentialQuantification
    ExplicitForAll
    FlexibleContexts
    FlexibleInstances
    ForeignFunctionInterface
    GADTSyntax
    GeneralisedNewtypeDeriving
    GeneralizedNewtypeDeriving
    HexFloatLiterals
    ImplicitPrelude
    ImportQualifiedPost
    InstanceSigs
    KindSignatures
    LambdaCase
    MonomorphismRestriction
    MultiParamTypeClasses
    NamedFieldPuns
    NamedWildCards
    NoStarIsType
    NumericUnderscores
    OverloadedLabels
    OverloadedRecordDot
    OverloadedStrings
    PackageImports
    PartialTypeSignatures
    PatternGuards
    PolyKinds
    PostfixOperators
    QualifiedDo
    RankNTypes
    RecordWildCards
    RelaxedPolyRec
    ScopedTypeVariables
    StandaloneDeriving
    StandaloneKindSignatures
    TupleSections
    TypeApplications
    TypeFamilies
    TypeFamilyDependencies
    TypeOperators
    TypeSynonymInstances
    UndecidableInstances
    ViewPatterns

  exposed-modules:
    Plutarch.Extra.Record
    Profile
    SmartTokens.Contracts.ExampleTransferLogic
    SmartTokens.Contracts.Issuance
    SmartTokens.Contracts.ProgrammableLogicBase
    SmartTokens.Contracts.ProtocolParams
    SmartTokens.Core.Crypto
    SmartTokens.Core.List
    SmartTokens.Core.PlutusDataList
    SmartTokens.Core.Utils
    SmartTokens.LinkedList.Common
    SmartTokens.LinkedList.MintDirectory
    SmartTokens.LinkedList.SpendDirectory
    SmartTokens.Types.Constants
    SmartTokens.Types.ProtocolParams
    SmartTokens.Types.PTokenDirectory
    Types.Classes
    Types.Constants
    Wst.Cli
    Wst.Offchain
    Wst.Onchain
    Wst.Server

  -- Compile

  build-depends:
    , aeson
    , base
    , base16-bytestring
    , bytestring
    , cardano-binary
    , data-default
    , generics-sop
    , plutarch
    , plutarch-extra
    , plutarch-ledger-api
    , plutus-core
    , plutus-ledger-api
    , plutus-tx
    , serialise
    , text

  hs-source-dirs:     lib

common dependencies
  build-depends:
    , aeson
    , aeson-pretty
    , base
    , base16-bytestring
    , bytestring
    , cardano-binary
    , cborg
    , data-default
    , directory
    , plutarch
    , plutarch-extra
    , plutarch-ledger-api
    , plutus-core
    , plutus-ledger-api
    , plutus-tx
    , serialise
    , text

executable export-smart-tokens
  import:         lang, dependencies
  main-is:        Main.hs

  -- Modules included in this executable, other than Main.
  -- other-modules:

  -- LANGUAGE extensions used by modules in this package.
  -- other-extensions:
  build-depends:
    , aeson-pretty
    , wst-poc

  hs-source-dirs: app

-- executable test-stablecoin
--   import:         lang, dependencies
--   main-is:        Test.hs
--   other-modules:  Testing.Eval
--   hs-source-dirs: src, src/Testing
--   build-depends:  wst-poc                                                                                                                                                                                                                                                         

-- test-suite helpers-tests
--   import:           lang, dependencies
--   type:             exitcode-stdio-1.0
--   main-is:          Test.hs
--   hs-source-dirs:   src src/Testing
--   other-modules:
--     SmartTokens.Core.Crypto
--     SmartTokens.Core.List
--     SmartTokens.Core.Utils
--     MerkleTree.Helpers
--     MerkleTree.MerklePatriciaForestry
--     MerkleTree.Merkling
--     Testing.Crypto
--     Testing.Eval
--     Testing.MerklePatriciaForestry
--     Testing.TransactionProofs
--     Types.Classes
--     Types.Constants

--   build-depends:
--     , cardano-crypto-class
--     , prettyprinter
--     , tasty
--     , tasty-hunit
--     , tasty-quickcheck

--   default-language: Haskell2010
